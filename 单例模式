单例模式：
解决的问题：如何只让设计的类只能创建一个对象
如何实现：饿汉式  &  懒汉式
//饿汉式1
class Bank{
	//1.私有化构造器
	private Bank(){}
	//2.创建类的对象，同时设置为private的，通过公共的来调用，体现封装性
	//4.要求此对象也为static的
	private static Bank instance = new Bank();
	//3.此公共的方法，必须为static 
	public static Bank getInstance(){
		return instance;	
	}
}

//饿汉式2
class Bank{
	//1.私有化构造器
	private Bank(){}
	//2.创建类的对象，同时设置为private的，通过公共的来调用，体现封装性
	//4.要求此对象也为static的
	private static Bank instance = null;
	static{
		instance  = new Bank();	
	}
	//3.此公共的方法，必须为static 
	public static Bank getInstance(){
		return instance;	
	}
}

//懒汉式
class Bank{
	private Bank(){}
	
	private static Bank instance = null;
	
	public static Bank getInstance(){
		if(instance == null){//可能存在线程安全问题的！
			instance = new Bank();		
		}	
		return instance;
	}
}
